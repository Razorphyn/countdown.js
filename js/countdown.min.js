/*!jQuery Countdown*/
/**
 * Simple COuntdown with callback and Time Zone Support
 *
 * Version: 1.0.0 (12/11/2013)
 * Requires: jQuery v1.7+
 *
 * Where applicable: Copyright (c) 2013 Luca Grandi
 * Under MIT:
 *  http://www.opensource.org/licenses/mit-license.php
 *
 *
 */
(function(d){function k(){var c=document.createElement("canvas");return!(!c.getContext||!c.getContext("2d"))}d.fn.countdown=function(c,l){function m(){currentDate=Math.floor(((new Date).getTime()-e.offset)/1E3);f<currentDate?(null!=b.callback&&b.callback.call(this),"undefined"!=typeof g&&clearInterval(g)):(seconds=f-currentDate,days=Math.floor(seconds/86400),seconds-=86400*days,hours=Math.floor(seconds/3600),seconds-=3600*hours,minutes=Math.floor(seconds/60),seconds-=60*minutes,1==days?a.find(".timeRefDays").text("Day"): a.find(".timeRefDays").text("Days"),1==hours?a.find(".timeRefHours").text("Hour"):a.find(".timeRefHours").text("Hours"),1==minutes?a.find(".timeRefMinutes").text("Minute"):a.find(".timeRefMinutes").text("Minutes"),1==seconds?a.find(".timeRefSeconds").text("Second"):a.find(".timeRefSeconds").text("Seconds"),1!=b.knob?(0!=b.format&&(days=2<=String(days).length?days:"0"+days,hours=2<=String(hours).length?hours:"0"+hours,minutes=2<=String(minutes).length?minutes:"0"+minutes,seconds=2<=String(seconds).length? seconds:"0"+seconds),h.text(days),n.text(hours),p.text(minutes),q.text(seconds)):(h.trigger("configure",{max:days}),h.val(days).trigger("change"),n.val(hours).trigger("change"),p.val(minutes).trigger("change"),q.val(seconds).trigger("change")))}var b={knob:!1,option:{day:{},hour:{},minute:{},second:{}},date:null,format:!0,callback:null},e={timezone:!1,offset:0};c&&d.extend(b,c);l&&d.extend(e,l);var f=(new Date(b.date)).getTime()/1E3;!0==e.timezone&&(e.offset=36E5*parseInt(e.offset)+6E4*(new Date).getTimezoneOffset()); var a=d(this);0!=b.knob&&k?(a.append('<div class="timer-area" ><input class="days" type="text" value="0" data-readonly="true" /><input class="hours" type="text" value="0" data-readonly="true" /><input class="minutes" type="text" value="0" data-readonly="true" /><input class="seconds" type="text" value="0" data-readonly="true" /></div>'),b.option.day=d.extend(!0,{},c.option.global,c.option.day),b.option.hour=d.extend(!0,{},c.option.global,c.option.hour),b.option.minute=d.extend(!0,{},c.option.global, c.option.minute),b.option.second=d.extend(!0,{},c.option.global,c.option.second),a.find(".days").knob(b.option.day),a.find(".hours").knob(b.option.hour),a.find(".minutes").knob(b.option.minute),a.find(".seconds").knob(b.option.second)):0==b.knob||k?a.append('<div class="timer-area"><ul class="countdown" ><li><span class="days">00</span><p class="timeRefDays">Days</p></li><li><span class="hours">00</span><p class="timeRefHours">Hours</p></li><li><span class="minutes">00</span><p class="timeRefMinutes">Minutes</p></li><li><span class="seconds">00</span><p class="timeRefSeconds">Seconds</p></li></ul></div>'): (b.knob=0,a.html('<ul class="countdown"><li><span class="days">00</span><p class="timeRefDays">Days</p></li><li><span class="hours">00</span><p class="timeRefHours">Hours</p></li><li><span class="minutes">00</span><p class="timeRefMinutes">Minutes</p></li><li><span class="seconds">00</span><p class="timeRefSeconds">Seconds</p></li></ul>'));var h=a.find(".days"),n=a.find(".hours"),p=a.find(".minutes"),q=a.find(".seconds");m();var g=setInterval(function(){m()},1E3);isNaN(f)&&(alert("Invalid date mm/dd/yyyy. Here's an example: 12/25/2013 17:30:00"), clearInterval(g))}})(jQuery);